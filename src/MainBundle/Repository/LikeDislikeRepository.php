<?php

namespace MainBundle\Repository;

/**
 * LikeDislikeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LikeDislikeRepository extends \Doctrine\ORM\EntityRepository
{
    public function findlikesCounts($iduser)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT COUNT(l.lidis) FROM MainBundle:LikeDislike l where l.lidis=1 and l.userliked=:id")
            ->setParameter('id',$iduser);
        return $query->getResult();
    }

    public function findlikesdelete($iduser,$iduserl)
    {
        $query=$this->getEntityManager()
            ->createQuery("Delete From MainBundle:LikeDislike l where l.userlike=:idu and l.userliked=:id and l.lidis=1")
            ->setParameter('idu',$iduser)
            ->setParameter('id',$iduserl);
        return $query->getResult();
    }

    public function finddislikesdelete($iduser,$iduserl)
    {
        $query=$this->getEntityManager()
            ->createQuery("Delete From MainBundle:LikeDislike l where l.userlike=:idu and l.userliked=:id and l.lidis=0")
            ->setParameter('idu',$iduser)
            ->setParameter('id',$iduserl);
        return $query->getResult();
    }

    public function findDislikesCounts($iduser)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT COUNT(l.lidis) FROM MainBundle:LikeDislike l where l.lidis=0 and l.userliked=:id")
            ->setParameter('id',$iduser);
        return $query->getResult();
    }
    public function findVerify($iduser,$iduserl)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT l FROM MainBundle:LikeDislike l where l.userlike=:idu and l.userliked=:id")
            ->setParameter('idu',$iduser)
            ->setParameter('id',$iduserl);
        return $query->getResult();
    }
    public function findLikesCountsCurrent($iduser)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT COUNT(l.lidis) FROM MainBundle:LikeDislike l where l.lidis=1 and l.userliked=:id")
            ->setParameter('id',$iduser);
        return $query->getResult();
    }
    public function findDislikesCountsCurrent($iduser)
    {
        $query=$this->getEntityManager()
            ->createQuery("SELECT COUNT(l.lidis) FROM MainBundle:LikeDislike l where l.lidis=0 and l.userliked=:id")
            ->setParameter('id',$iduser);
        return $query->getResult();
    }
}
